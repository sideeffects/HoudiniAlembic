# Dialog script for alembicarchive automatically generated 09/21/11 08:42:02

{
    name	alembicarchive
    script	alembicarchive
    label	"Alembic Archive"

    help {
	""
    }

    group {
	name	"stdswitcher3"
	label	"Transform"
	invisibletab

	parm {
	    name	"keeppos"
	    baseparm
	    invisible
	    joinnext
	    export	none
	}
	parm {
	    name	"pre_xform"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"xOrd"
	    baseparm
	    invisible
	    joinnext
	    export	none
	}
	parm {
	    name	"rOrd"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"t"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"r"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"s"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"p"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"scale"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"lookatpath"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"lookup"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"pathobjpath"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"roll"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"pos"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"uparmtype"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"pathorient"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"up"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"bank"
	    baseparm
	    invisible
	    export	none
	}
    }

    group {
	name	"stdswitcher3_1"
	label	"Subnet"
	invisibletab

	parm {
	    name	"label1"
	    baseparm
	    invisible
	    export	dialog
	}
	parm {
	    name	"label2"
	    baseparm
	    invisible
	    export	dialog
	}
	parm {
	    name	"label3"
	    baseparm
	    invisible
	    export	dialog
	}
	parm {
	    name	"label4"
	    baseparm
	    invisible
	    export	dialog
	}
	parm {
	    name	"tdisplay"
	    baseparm
	    invisible
	    joinnext
	    export	none
	}
	parm {
	    name	"display"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"outputobj"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"visibleobjects"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"picking"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"pickscript"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"caching"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"use_dcolor"
	    baseparm
	    invisible
	    export	none
	}
	parm {
	    name	"dcolor"
	    baseparm
	    invisible
	    export	none
	}
    }

    group {
	name	abcLoadParameters
	label	"Alembic Loading Parameters"

	parm {
	    name	"buildHierarchy"
	    label	"Build or Update Hierarchy"
	    type	button
	    default	{ "1" }
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "script_callback_language" "python" }
	    parmtag	{ "script_callback" "kwargs['node'].hdaModule().BuildHierarchyRoot(kwargs['node'])" }
	    parmtag	{ "export_disable" "1" }
	}
	parm {
	    name	"buildSubnet"
	    label	"Build Hierarchy Using Subnetworks"
	    type	toggle
	    default	{ 1 }
	    export	none
	    parmtag	{ "export_disable" "1" }
	    help	"If turned off, object inheritance will be used instead of subnetworks.  This can result in better performance in some cases, though it may result in very large networks for large scenes."
	}
	parm {
	    name	"channelRef"
	    label	"Build Hierarchy With Channel References"
	    type	toggle
	    default	{ 0 }
	    export	none
	    parmtag	{ "export_disable" "1" }
	    help	"If enabled, child objects will have channel references to the main archive."
	}
	parm {
	    name	"buildSingleGeoNode"
	    label	"Load Hierarchy As One Single Geometry Node"
	    type	toggle
	    default	{ 0 }
	    export	none
	    parmtag	{ "export_disable" "1" }
	    help	"If enabled, the hierarchical geometries from an Alembic scene archive will be loaded as a single geometry node. However, the hierarchy for the camera will be preserved." 
	}
	parm {
	    name	"flattenVisibility"
	    label	"Flatten Visibilty Evaluation"
	    type	toggle
	    default	{ "1" }
	    export	none
	    parmtag	{ "export_disable" "1" }
	    help	"For correct visibility computations, Houdini needs to evaluate visibility in the innermost geometry nodes since children of a subnet inherit visibility (which isn't always true in Alembic).  You should turn this off if you need to export Alembic maintaining the original visibility."
	}
	parm {
	    name	"pushChannels"
	    label	"Push Parameters to Children"
	    type	button
	    default	{ "1" }
	    export	none
	    parmtag	{ "script_callback_language" "python" }
	    parmtag 	{ "script_callback" "kwargs['node'].hdaModule().PushParametersToChildren(kwargs['node'])" }
	    parmtag	{ "export_disable" "1" }
	    disablewhen	"{ channelRef == on }"
	}
	parm {
	    name	"reloadGeometry"
	    label	"Reload Geometry"
	    type	button
	    default	{ "1" }
	    export	none
	    parmtag	{ "script_callback_language" "python" }
	    parmtag 	{ "script_callback" "kwargs['node'].hdaModule().ReloadGeometry(kwargs['node'])" }
	    parmtag	{ "export_disable" "1" }
	}
    }

    multiparm {
	name	"numlayers"
	label	"Number of Layers"
	default	0

	parm {
	    name	"enablelayer#"
	    label	""
	    type	toggle
	    nolabel
	    joinnext
	    default	{ "1" }
	}
	parm {
	    name	"layer#"
	    label	"Layer #"
	    type	file
	    default	{ "" }
	    disablewhen	"{ enablelayer# == off }"
	    range	{ 0 1 }
	    parmtag	{ "filechooser_mode" "read" }
	    parmtag	{ "filechooser_pattern" "*.abc" }
	}
    }
    parm {
	name	"fileName"
	label	"File Name"
	type	file
	default	{ "" }
	range	{ 0 1 }
	export	none
	parmtag	{ "filechooser_mode" "read" }
	parmtag	{ "filechooser_pattern" "*.abc" }
    }
    parm {
	name	"objectPath"
	label	"Object Path"
	type	string
	default	{ "" }
        parmtag { "script_action" "import shlex\nnode = kwargs['node']\nitems = [ a for i, a in enumerate(__import__('_alembic_hom_extensions').alembicGetObjectPathListForMenu(node.hdaModule().GetFileName(node))) if i % 2 == 0 ]\npicked = shlex.split(node.parm('objectPath').eval())\nselected = [ '\"%s\"' % (s, ) if ' ' in s else s for s in hou.ui.selectFromTree(items, picked, message='Select Alembic Objects', title='Select Alembic Objects') ]\nnode.parm('objectPath').set(' '.join(selected))" }
        parmtag { "script_action_help" "Select Alembic objects." }
        parmtag { "script_action_icon" "BUTTONS_chooser_node" }
	range	{ 0 1 }
	export	none
    }
    parm {
	name	"frame"
	label	"Frame"
	type	float
	default	{ "$FF" }
	range	{ 0 10 }
	export	none
    }
    parm {
	name	"fps"
	label	"Frames per Second"
	type	float
	default	{ "$FPS" }
	range	{ 0 10 }
	export	none
    }
    parm {
	name	"loadmode"
	label	"Load As"
	type	ordinal
	default	{ 0  }
	menu	{
	    "alembic"	"Alembic Delayed Load Primitives"
	    "houdini"	"Load Houdini Geometry"
	    "hpoints"	"Houdini Point Cloud"
	    "hboxes"	"Houdini Boxes"
	}
	export	none
    }
    parm {
	name	"viewportlod"
	label	"Display As"
	type	ordinal
	default	{ 0  }
	menu	{
	    "full"	"Full Geometry"
	    "points"	"Point Cloud"
	    "box"	"Bounding Box"
	    "centroid"	"Centroid"
	    "hidden"	"Hidden"
	}
	export	none
    }
    parm {
        name        "loadUserProps"
        label       "User Properties"
        type        ordinal
        default     { 0 }
        menu        {
            "none"  "Do Not Load"
            "data"  "Load Values Only"
            "both"  "Load Values and Metadata"
        }
        export      none
    }
    multiparm {
	name	"remapAttributes"
	label	"Remap Attributes"

	parm {
	    name	"abcName#"
	    label	"Alembic Name #"
	    type	string
	    default	{ "" }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"hName#"
	    label	"Houdini Name #"
	    type	string
	    default	{ "" }
	    range	{ 0 1 }
	    export	none
	}
    }
}
